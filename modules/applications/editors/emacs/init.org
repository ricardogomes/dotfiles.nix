#*TITLE: Ricardo Gomes Emacs Literate Config
#*AUTHOR: Ricardo Gomes

* Reset Emacs base UI

The first step is to reset the defaults from Emacs that don't make much sense to me. This includes removing the window chrome and startup messages.

#+BEGIN_SRC emacs-lisp :tangle init.el

  (setq inhibit-startup-message t )
  (setq visible-bell t)

  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (menu-bar-mode -1)
  (set-fringe-mode 10)

#+END_SRC


** TODO Document the options defined

* Set up use-package

Next set is to setup the package repositories and import the use-package package

#+BEGIN_SRC emacs-lisp :tangle init.el

  (require 'package)
  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
			   ("org" . "https://orgmode.org/elpa/")
			   ("elpa" . "https://elpa.gnu.org/packages/")))
  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))
  (require 'use-package)
  (setq use-package-always-ensure t)


  

#+END_SRC

** TODO Document the package repositories choice

** TODO Document the setup of use-package in the emacs lifecycle
* Set up org-mode

Next I want to setup org-mode.

#+BEGIN_SRC emacs-lisp :tangle init.el

(defun rg/org-mode-setup()
  (org-indent-mode)
  (visual-line-mode 1))

(use-package org
  :hook (org-mode . rg/org-mode-setup)
  :config
  (setq org-ellipsis " ï…‰")

  (setq org-agenda-start-with-log-mode t)
  (setq org-log-done 'time)
  (setq org-log-into-drawer t)

  (setq org-todo-keywords
	'((sequence "TODO(t)" "NEXT(n)" "|" "DONE(d!)")
	  (sequence "BACKLOG(b)" "PLAN(p)" "READY(r)" "ACTIVE(a)" "REVIEW(v)" "WAIT(w@/!)" "HOLD(h)" "|" "COMPLETED(c)" "CANCEL(k@)")))
  
  (setq org-agenda-files
	'("/home/rg/Development/Playground/emacs/SystemCraftersEmacsFromScratch/README.org")))

(use-package org-bullets
  :after org
  :hook (org-mode . org-bullets-mode))
   
#+END_SRC

** TODO Research how to maek sure org-mode exists on initial bootstrap

** TODO Improve Documentation
* Set up UI baseline

These are UI changes, like fonts, themes and UI features (rainbow-delimiters).

#+BEGIN_SRC emacs-lisp :tangle init.el

  (set-face-attribute 'default nil :font "MonaspiceKr Nerd Font Propo" :height 280)

  (global-set-key (kbd "<escape>") 'keyboard-escape-quit)

  (use-package doom-modeline
    :ensure t
    :init (doom-modeline-mode 1))

  (use-package doom-themes
    :init (load-theme 'doom-dracula t ))


  (column-number-mode)
  (global-display-line-numbers-mode t)

  (dolist (mode '(org-mode-hook
                    term-mode-hook
                    shell-mode-hook		
                    eshell-mode-hook))
  (add-hook mode (lambda () (display-line-numbers-mode 0))))

  (use-package rainbow-delimiters
    :hook (prog-mode . rainbow-delimiters-mode))

#+END_SRC

** TODO Improve Documentation

* Setup Packages

** TODO Research ivy

Ivy seems to be a set of 3 packages, *ivy* itself is a completion mechanism, *counsel* is a collection of ivy-enhanced versions of emacs
commands, and swiper is ivy-enhanced alternative to Isearch (which at
this time I have no idea what it is).

The package that contains these tools seems to be the *counsel* package.


#+begin_src emacs-lisp :tangle init.el

  (use-package counsel)

  (setq ivy-use-virtual-buffers t)
  (setq ivy-count-format "(%d/%d) ")

  ;; Keybinds

  (global-set-key (kbd "C-s") 'swiper-isearch)
  (global-set-key (kbd "M-x") 'counsel-M-x)
  (global-set-key (kbd "C-x C-f") 'counsel-find-file)

  ;; Keybinds I'm still exploring

  (global-set-key (kbd "M-y") 'counsel-yank-pop)
  (global-set-key (kbd "<f1> f") 'counsel-describe-function)
  (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
  (global-set-key (kbd "<f1> l") 'counsel-find-library)
  (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
  (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
  (global-set-key (kbd "<f2> j") 'counsel-set-variable)
  (global-set-key (kbd "C-x b") 'ivy-switch-buffer)
  (global-set-key (kbd "C-c v") 'ivy-push-view)
  (global-set-key (kbd "C-c V") 'ivy-pop-view)
  (global-set-key (kbd "C-c c") 'counsel-compile)
  (global-set-key (kbd "C-c g") 'counsel-git)
  (global-set-key (kbd "C-c j") 'counsel-git-grep)
  (global-set-key (kbd "C-c L") 'counsel-git-log)
  (global-set-key (kbd "C-c k") 'counsel-rg)
  (global-set-key (kbd "C-c m") 'counsel-linux-app)
  (global-set-key (kbd "C-c n") 'counsel-fzf)
  (global-set-key (kbd "C-x l") 'counsel-locate)
  (global-set-key (kbd "C-c J") 'counsel-file-jump)
  (global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
  (global-set-key (kbd "C-c w") 'counsel-wmctrl)
  (global-set-key (kbd "C-c C-r") 'ivy-resume)
  (global-set-key (kbd "C-c b") 'counsel-bookmark)
  (global-set-key (kbd "C-c d") 'counsel-descbinds)
  (global-set-key (kbd "C-c g") 'counsel-git)
  (global-set-key (kbd "C-c o") 'counsel-outline)
  (global-set-key (kbd "C-c t") 'counsel-load-theme)
  (global-set-key (kbd "C-c F") 'counsel-org-file)
  
#+end_src

** TODO Research ivy-rich

** TODO Research counsel

** TODO Resarch which-key

** TODO Research general

** TODO Research helpful

** TODO Research projectile

** TODO Research dashboard



